;(function (root, factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {   // jshint ignore:line
        // AMD
        define([                                            // jshint ignore:line
            'jquery',
            'handlebars',
            'lazyload'
        ], factory);
    } else {
        // Browser globals
        root.skp11 = root.skp11 || {};
        root.skp11.product = root.skp11.product || {};
        root.skp11.product.CustomOption = factory(
            root.jQuery,
            root.Handlebars
        );
    }
}(this, function ($, Handlebars, Lazyload) {
    'use strict';
    var CustomOption;

    var optVar = productOptInfo;
    var prcVar = productPrcInfo;
    var prdVar = productPrdInfo

    var SelOptRecord = function(data) {
        this.optNm = data.optNm;
        this.optItemNo = data.optItemNo;
        this.optValueNo = data.optValueNo;
        this.addPrc = data.addPrc;
        this.stckQty = data.stckQty;
        this.selOptIdx = data.selOptIdx;
    };

    var EntOptRecord = function(data) {
        this.optNm = data.optNm;
        this.optNo = data.optNo;
        this.optTxt = data.optTxt;
    };

    CustomOption = function (optionId, position) {

        this.SPLIT_SEPARATOR = optVar.SPLIT_SEPARATOR;
        // 사용되는 객체
        this.$button = $(optionId);
        this.position = position;
        this.$win = $(window);

        // 템플릿 컴파일
        this.source2 = $('#optionBottomTemplate').html();
        this.bottomHandlebars = Handlebars.compile(this.source2);

        // 디폴트 값
        this.index = 0;
        this.isSoldOutFlag = false;
        this.isOptSearchFlag = false;

        this.paramData = {};

        this.selOptArr = [];
        this.entOptArr = [];
        this.defaultOptionQty = 1;

        this.timer;
        // 표준 상품 추가 변수
        this.optCnt = 0;
        this.selCnt = 0;
        this.entCnt = 0;
        this.prdNo	= 0;
        this.selOptTyp = "";
        this.itemNms = "";
        this.prdNm	= "";
        this.dscPrc	= 0;
        this.prdDlvCstStlTyp = "01";	//기본 선결제
        this.selPrc	= 0;
        this.marketPrc = 0;
        // 단품일 경우 사용하는 추가 변수
        this.totStockQty = -1;
        this.totPrdStckNo = -1;
        this.totPrdPrc = -1;
        // 주문 제한 변수
        this.ordObjLimit	= "N";
        this.limitTypCd		= "";
        this.ordLimitRedirectURL	= "";
        this.eventDomainYN	= "";
        this.isSelLimit	= false;
        this.selLimitQty	= 0;
        this.isSelMinLimit	= false;
        this.selMinLimitQty	= 0;
        this.selLimitPrdBuyCnt	= -1;
        this.selLimitTypCd	= "";
        this.townSelLmtDy	= 0;
        this.discAmt	= 0;
        this.prdIndexStr = "";
        this.visitPrdYn	= "";	//방문 가능 여부
        //로그 관련 추가 변수
        this.prdImgUrl	= "";
        this.lctgrNo	= "";
        this.mctgrNo	= "";
        this.sctgrNo	= "";
        this.dispCtgrNo	= "";
        this.lctgrNm	= "";
        this.mctgrNm	= "";
        this.sctgrNm	= "";
        this.dsipCtgrNm	= "";
        this.catalogNo	= "";
        this.isSale		= "false";
        this.isAdultPrd	= "false";
        this.sellerNm	= "";
        this.brandAddCtgrNo	= "";
        this.brandCd	= "";
        this.isNowDlv	= "false";
    };

    CustomOption.prototype.init = function () {
        var _this = this;

        _this.bind();
        setTimeout(function () {
            $('.option_item_list > li:nth-child(1)').trigger('click');
        }, 500);
    };

    // 이벤트 바인드
    CustomOption.prototype.bind = function () {
        var _this = this;

        $('img.lazy').lazyload({
            container : $('#stdPrdListBot')
        });
        // 상품 버튼
        _this.$button.on('click', function (e){
            e.preventDefault();
            var _target	= $(this).parent();

            if(_target.hasClass('active')) {
                _target.removeClass('active');
                $("#stdOptListBot").removeClass('active');
            } else {
                _target.addClass('active');
                $("#stdOptListBot").removeClass('active');
            }
        });

        // 상품 버튼 클릭
        $("#stdPrdListBot").find('li').on('click', function (e, clickType){
            e.preventDefault();
            var targetPrdNo	= $(this).data("optprdno");
            _this.prdNm = $(this).data("optprdnm");
            _this.prdIndexStr	= $(this).data("indexstr");
            _this.getFirstOptData(targetPrdNo).then(function (returnVal) {
                _this.drawOptionInfo(returnVal, clickType);
            });	// 상품및 1depth 옵션 정보를 조회한다.
        });

        var $btnRentalFirstNumber = $('#btnRentalFirstNumber');
        var $activeControl = $btnRentalFirstNumber.parent();
        $btnRentalFirstNumber.on('click', function (e) {
            $activeControl.toggleClass('active');
        });

        var $rentalFirstNumbers = $('#rentalFirstNumbers');
        var $viewRentalFirstNumber = $('#viewRentalFirstNumber');
        var $rentalTel1 = $('#rentalTel1');

        $rentalFirstNumbers.on('click', function (e) {
            var selectNumber = $(e.target).text();
            $viewRentalFirstNumber.text(selectNumber);
            $rentalTel1.val(selectNumber);
            $activeControl.removeClass('active');
        });
    };

    // 옵션 레이어 호출
    CustomOption.prototype.viewOption = function (isOpen, isFocus) {

    };


    // 상단과 하단의 옵션을 초기화 시킨다
    CustomOption.prototype.resetOption = function (index) {

        if("01" == optVar.selOptTyp){
            var _this = this;
            // 하위 옵션 초기화
            $('#ui_std_option_layer2').find('.option_item_list').filter(':gt(' + index + ')').html('');	// 하위 옵션 리스트 초기화
            // 옵션탭 네이밍 초기화
            $('#ui_std_option_layer2').find('.bot_option_section').filter(':gt(' + index + ')').each(function(){
                var originOptNm	= $(this).find('input').val();
                $(this).find('.accordion_item').html(originOptNm);
            });
        }
    };

    CustomOption.prototype.trim = function(txt) {
        return txt.replace(/(^\s*)|(\s*$)/gi, "");
    };

    // 옵션입력박스에 입력이 완료되었는지 확인
    CustomOption.prototype.checkInput = function(isAlert) {
        var _this = this;
        var $inputTarget = $('#ui_std_option_layer2 > .info_list').find('dd > div > input');

        _this.isInput = true;

        _this.entOptArr = [];
        $.each($inputTarget, function (index, el) {
            var txt = _this.trim($(el).val());
            if (txt === '') {
                _this.isInput = false;
            } else {
                _this.setEntOptRecord($(el));
            }
        });

        if(!_this.isInput && isAlert){
            _this.entOptArr = [];
            alert('입력형 옵션이 입력되지 않았습니다. 입력형 옵션을 입력 후 선택하세요.');
        }
    };

    // 상단과 하단의 옵션을 동기화 시킨다
    CustomOption.prototype.setTemplate = function (data) {
        var _this = this,
            index = parseInt(data.target, 10) - 1;

        if (data.target > 0) {
            _this.resetOption(index);
        }


        $("#ui_stdPrdOption2").find('.accordion_body').eq(data.target).html(_this.bottomHandlebars(data));
        $("#ui_stdPrdOption2").find('.accordion_body').eq(data.target - 1).parent().removeClass('active');
        $("#ui_stdPrdOption2").find('.accordion_body').eq(data.target).parent().addClass('active');

        _this.afterBindEvent();
    };


    CustomOption.prototype.oldIETrigger = function () {
        var _this = this;
        if ((navigator.appVersion.indexOf("MSIE 7.") > 0) || (navigator.appVersion.indexOf("MSIE 8.") > 0) || (navigator.appVersion.indexOf("MSIE 9.") > 0)) {
            $.each(_this.$input, function () {
                $(this)[0].fireEvent('onblur');
            });
        }
    };


    CustomOption.prototype.getFirstOptData = function (prdNo) {

        var _this = this;

        var url = "/products/v1/pc/products/" + prdNo + "/group/first-options"
            ,param
            ,callBack;

        param = "xSiteCode=" + optVar.xSiteCode + "&partnerPrdNos=" + prdVar.partnerPrdNos;

        callBack = function(returnVal){

            var returnVal = eval(returnVal);

            if (returnVal.result == "FAIL") {
                alert("옵션을 불러오는 과정에서 일시적인 오류가 발생했습니다. 새로고침하신 후 이용해주세요.");
                return;
            } else if (returnVal.result == "NOSALE") {
                alert("현재 해당 상품은 구매할 수 없습니다.");
                return;
            }
            _this.optCnt 	= returnVal.optCnt;
            _this.selCnt	= returnVal.selOptCnt;
            _this.entCnt	= returnVal.entOptCnt;
            _this.prdNo		= returnVal.prdNo;
            _this.selOptTyp	= returnVal.selOptTyp;
            _this.dscPrc	= returnVal.dscPrc;
            _this.selPrc	= returnVal.selPrc;
            _this.marketPrc = returnVal.marketPrc;
            _this.totStockQty	= returnVal.totStockQty;
            _this.totPrdStckNo	= returnVal.totPrdStckNo;
            _this.totPrdPrc		= returnVal.totPrdPrc;
            _this.ordObjLimit	= returnVal.ordObjLimit;
            _this.limitTypCd		= returnVal.limitTypCd;
            _this.ordLimitRedirectURL	= returnVal.ordLimitRedirectURL;
            _this.eventDomainYN	= returnVal.eventDomainYN;
            _this.isSelLimit	= returnVal.isSelLimit;
            _this.selLimitQty	= returnVal.selLimitQty;
            _this.isSelMinLimit	= returnVal.isSelMinLimit;
            _this.selMinLimitQty	= returnVal.selMinLimitQty;
            _this.selLimitPrdBuyCnt	= returnVal.selLimitPrdBuyCnt;
            _this.selLimitTypCd		= returnVal.selLimitTypCd;
            _this.townSelLmtDy		= returnVal.townSelLmtDy;
            _this.repurchaseDy		= returnVal.repurchaseDy;
            _this.discAmt			= returnVal.discAmt;
            _this.visitPrdYn		= returnVal.visitPrdYn;	//방문 가능 여부
            _this.is11PayPopUpYn	= returnVal.is11PayPopUp;	//11Pay 팝업 여부
            _this.soDscAmt = returnVal.soDscAmt;
            _this.moDscAmt = returnVal.moDscAmt;
            _this.defaultOptionQty = returnVal.defaultOptionQty;

            try{	// 로그 관련 정보 세팅
                _this.prdImgUrl		= returnVal.prdImgUrl;
                _this.lctgrNo		= returnVal.lctgrNo;
                _this.mctgrNo		= returnVal.mctgrNo;
                _this.sctgrNo		= returnVal.sctgrNo;
                _this.dispCtgrNo	= returnVal.dispCtgrNo;
                _this.lctgrNm		= returnVal.lctgrNm;
                _this.mctgrNm		= returnVal.mctgrNm;
                _this.sctgrNm		= returnVal.sctgrNm;
                _this.dsipCtgrNm	= returnVal.dsipCtgrNm;
                _this.catalogNo		= returnVal.catalogNo;
                _this.isSale		= returnVal.isSale;
                _this.isAdultPrd	= returnVal.isAdultPrd;
                _this.sellerNm		= returnVal.sellerNm;
                _this.brandAddCtgrNo	= returnVal.brandAddCtgrNo;
                _this.brandCd		= returnVal.brandCd;
                _this.isNowDlv		= returnVal.isNowDlv;
            } catch (e) {}
            $("#stdOptListBot").html('').hide();

            return returnVal;
        };


        return $.ajax({
            url : url,
            data : param
        }).then(callBack);
    };

    CustomOption.prototype.drawOptionInfo = function (jsonObj, clickType) {

        var _this = this
        var $target = $('#ui_stdPrdOption2');
        //this.$win.trigger('optionLayerClose');   // 다른 레이어 닫기
        var optionHtml = '';
        if(jsonObj.optCnt == 0 && clickType == 'DESCRIPTION_VIEW') {
            $('#stdPrdListBot > .option_item_list > li[data-optprdno='+jsonObj.prdNo+']').focus();
        } else if( jsonObj.optCnt == 0) {
            _this.addOrderNoOptArr();
        } else if ( jsonObj.optCnt > 0 ) {
            $('#ui_stdPrd2').find('.selected').html(_this.prdIndexStr+'. '+_this.prdNm);
            optionHtml += '<div class="option_choice_wrap c_product_dropdown_wrap c_product_dropdown_style1" id="ui_stdPrdOption2" >';
            optionHtml += ' <div class="btn_option dropdown_selected">';
            optionHtml += '  <em class="selected">옵션 선택</em>';
            optionHtml += '  <button type="button" class="btn" aria-expanded="false">제품보기</button>';
            optionHtml += ' </div>';
            optionHtml += '		<div class="dropdown_list" id="ui_std_option_layer2">';

            // 입력형 옵션 시작
            var entOptArray	= jsonObj.entOpt;
            if(jsonObj.entOptCnt > 0 && entOptArray != undefined && entOptArray.length > 0) {
                optionHtml += '		<dl class="info_list option_item_list c_product_buy_contact2">';
                for(var i=0; i<entOptArray.length ; i++) {
                    optionHtml += '		<dt><label for="data" class="info_tit">'+entOptArray[i].dataOptentnm+'</label></dt>';
                    optionHtml += '		<dd>';
                    optionHtml += '		    <div class="c_product_input c_product_input_sm">';
                    optionHtml += '			    <input type="text" data-optentno="'+entOptArray[i].dataOptentno+'" data-optentnm="'+entOptArray[i].dataOptentnm+'"'
                        + ' class="info_cont form_input" value="" placeholder="'+entOptArray[i].dataOptentnm+' : 입력하세요" name="txtEntOpt" title="옵션명입력" maxlength="50">';
                    optionHtml += '		    </div>';
                    optionHtml += '		</dd>';
                }
                optionHtml += '		</dl>';
            }
            // 입력형 옵션 끝

            // 선택형 시작
            if( jsonObj.selOptCnt > 0) {
                var selOptArray		= jsonObj.selOptList;
                var selTitleArray	= jsonObj.selOptTitleList;
                optionHtml += '<ul class="list">';
                for(var i=0; i<selTitleArray.length; i++) {
                    optionHtml += ' <li>';
                    optionHtml += '	<div class="accordion_section bot_option_section c_product_dropdown_wrap c_product_dropdown_in">';
                    _this.itemNms = _this.itemNms + selTitleArray[i] + _this.SPLIT_SEPARATOR;
                    optionHtml += '		<div class="accordion_head btn_option dropdown_selected">';
                    optionHtml += '			<em class="accordion_item selected">' + selTitleArray[i] + '</em>';
                    optionHtml += '			<button type="button" class="btn">옵션 보기</button>';
                    optionHtml += '			<input type="hidden" name="botOptTitle" value="'+selTitleArray[i]+'"/>';
                    optionHtml += '		</div>';
                    optionHtml += '		<div class="accordion_body dropdown_list">';
                    if (jsonObj.selOptTyp == '01' && i == 0) {	//선택형, 그룹상품 독립형옵션 없음.
                        optionHtml += '		<ul class="option_item_list b_product_buy_option">';
                        for(var j=0; j<selOptArray.length; j++) {
                            var smartOptImg	= selOptArray[j].smartOptImg;
                            var addClass = selOptArray[j].dataStckqty != undefined && Number(selOptArray[j].dataStckqty) > 0
                                ? ""
                                : "disabled";

                            optionHtml += '		<li class="c_product_option_item '+addClass+'">';
                            optionHtml += '			<div id="customOpt_top_'+selOptArray[j].dataOptvalueno+'"';
                            optionHtml += '					data-optno="'+selOptArray[j].dataOptno+'"';
                            optionHtml += '					data-optitemno="'+selOptArray[j].dataOptitemno+'"';
                            optionHtml += '					data-optvalueno="'+selOptArray[j].dataOptvalueno+'"';
                            optionHtml += '					data-dtloptnm="'+selOptArray[j].dataDtloptnm+'"';
                            optionHtml += '					data-minaddprc="'+selOptArray[j].dataMinaddprc+'"';
                            optionHtml += '					data-maxaddprc="'+selOptArray[j].dataMaxaddprc+'"';
                            optionHtml += '					data-stckqty="'+selOptArray[j].dataStckqty+'"';
                            optionHtml += '					data-addprc="'+selOptArray[j].dataAddprc+'"';
                            optionHtml += '					data-seloptidx="1"';
                            optionHtml += '					data-stckno="'+selOptArray[j].dataStckno+'"';
                            optionHtml += '					data-price="'+selOptArray[j].dataPrice+'"';
                            optionHtml += '			class="option_item">';
                            if(smartOptImg != undefined && smartOptImg.length > 0) {
                                optionHtml += '			<div class="photo_wrap img"><span><img src="'+smartOptImg+'" alt="" style="width:72px;height:72px;"></span></div>';
                            }
                            optionHtml += '				<div class="option_item_info cont">';
                            optionHtml += '					<strong>'+selOptArray[j].dataDtloptnm+'</strong>';
                            if (selOptArray[j].stckTxt != undefined && selOptArray[j].stckTxt != '' && !prdVar.carProduct) {
                                optionHtml += '				<span class="text_em_sm">'+selOptArray[j].stckTxt+'</span>';
                            }
                            if (addClass == '') {
                                optionHtml += '             <dl class="c_prd_price">';
                                optionHtml += '               <div class="option_price price">';
                                optionHtml += '                 <dt>판매가</dt>';
                                optionHtml += '                 <dd>';
                                if (prdVar.carProduct && _this.marketPrc > 0) {
                                    optionHtml += '                     <span class="num value">' + _this.commaFormat(_this.marketPrc) + '</span>';
                                    optionHtml += '                     <span class="unit">원</span>~';
                                } else if(prdVar.carProduct && 0 >= _this.marketPrc){
                                    optionHtml += '                     <span class="num value">차량가격미정</span>';
                                } else {
                                    optionHtml += '                     <span class="num value">' + selOptArray[j].dataPrice + '</span>';
                                    optionHtml += '                     <span class="unit">원</span>';
                                    optionHtml += prdVar.isGroupBuyPrd ? prdVar.optPrcText : '';
                                }
                                optionHtml += '                 </dd>';
                                optionHtml += '               </div>';
                                optionHtml += '             </dl>';
                            }
                            optionHtml += '				    <p class="btn"><button type="button" class="c_product_btn c_product_btn_select">선택하기</button></p>';
                            optionHtml += '				</div>';

                            optionHtml += '		</div></li>';
                        }
                        optionHtml += '		</ul>';

                    }
                    optionHtml += '		</div>';	// 선택형 옵션 닫기
                    optionHtml += '	</div>';	// 선택형 영역 닫기
                    optionHtml += ' </li>';
                }
                optionHtml += '</ul>';
            }
            // 선택형 끝
            if(jsonObj.entOptCnt > 0 && jsonObj.selOptCnt == 0) {
                optionHtml += '<p class="c_product_buy_btn2">';
                optionHtml += '     <button type="button" id="ent_bot_btn" name="btnEntOptDone" class="btn_decided c_product_btn c_product_btn_style1">입력한 정보로 상품 추가</button>';
                optionHtml += '</p>';
            }

            optionHtml += '		</div>';	// 옵션 레이어 닫기
            optionHtml += '</div>';			// 옵션 영역 닫기

            $target.html(optionHtml);
            //$target.show();

            $target.find('.option_choice_wrap:nth-child(1)').addClass('active');
            $('#ui_stdPrd2').parent().removeClass('active');
            if(jsonObj.entOptCnt == 0 && jsonObj.selOptTyp == '01' ) {
                $('#ui_stdPrdOption2').find('.accordion_section').eq(0).addClass('active');
            }
        }
        //_this.$templateContent = $('#selOptList').find('.ui_option_list');
        _this.afterBindEvent();
    };

    CustomOption.prototype.afterBindEvent = function(paramData){
        var _this	= this;
        $("#ui_stdPrdOption2").find('.btn_option').unbind().on('click', function(e){	// 옵션창 보이기
            e.preventDefault();
            var _target	= $(this).parent();
            if(_target.hasClass('active')) {
                _target.removeClass('active');
                $('#ui_stdPrdOption2').find('.accordion_section').removeClass('active');
            } else {
                _target.addClass('active');
                _this.checkInput(false);
                if (_this.isInput) {
                    $('#ui_stdPrdOption2').find('.accordion_section').eq(0).addClass('active');
                }
            }
        });

        $("#ui_std_option_layer2").find('.option_item_list').find('.option_item').unbind().on('click', function(e){	// 상단 옵션리스트 클릭
            e.preventDefault();
            var _soldOutClass = 'disabled';
            var paramData = {};

            var $this 		= $(this);
            var _targetLi	= $(this).parent();

            _this.checkInput(true);
            if (!_this.isInput) {
                return false;
            }

            if(_targetLi.hasClass(_soldOutClass)){	// 품절일 경우에는 스킵
                return false;
            } else {
                if(_this.chkDuplicateSelOption($this.data("optno"))) {
                    return false;
                }

                var objData = _this.extractData($this);
                _this.index = objData.seloptidx - 1;

                var $target	 = $('#ui_std_option_layer2').find('.accordion_section').eq(_this.index);
                $target.find('.accordion_item').html(objData.dtloptnm);
                if(!$target.hasClass('is_choice'))$target.addClass('is_choice');
                $target.find('.txt_choice').show();

                //선택 옵션 정보 저장
                _this.setSelOptRecord($this);
                var isLast = (_this.selCnt == $this.data('seloptidx')) ? true : false;
                //console.log(_this.selCnt + ',' + $this.data('seloptidx') )

                //마지막 옵션 선택으로 인한 주문옵션에 추가
                if (isLast){
                    // 마지막 옵션을 선택한 경우 상품을 추가한다.
                    _this.chkOptStock();
                } else {
                    paramData.optNo = objData.optno;
                    paramData.selOptIdx = Number(objData.seloptidx);

                    _this.getNextOptList(paramData);
                }
            }


        });

        $("#ui_std_option_layer2 > .accordion_section > .accordion_head").unbind().on('click', function(e){	// 옵션탭 클릭시
            e.preventDefault();
            _this.checkInput(true);
            if (!_this.isInput) {
                return false;
            }
            var _openClass	= 'active';

            var _target	= $(this).parent();
            var optCnt	= _target.find("ul").find("li").length;
            var optGrpIndex	= _target.index();

            if(optCnt > 0 ) {	// 하위 옵션이 없을 경우 열리지 않는다.
                if(_target.hasClass(_openClass)) {
                    _target.removeClass(_openClass);
                } else {
                    _target.addClass(_openClass);
                }

                $('.bot_option_section').each(function(e){	// 다른 옵션창이 열려있을 경우 닫아 준다.
                    var tempOptGrpIndex	= $(this).index();
                    if(tempOptGrpIndex != optGrpIndex) $(this).removeClass(_openClass);
                });
            }
        });

        $('#ent_bot_btn').on('click', function(){	// 입력형 옵션만 있을 경우 선택박스
            if("btnEntOptDone" == $(this).attr("name")){
                if(_this.chkDuplicateSelOption(_this.totPrdStckNo)){
                    return false;
                }
                _this.checkInput(true);
                if(_this.isInput){
                    var dataArr = [{
                        prdStckNo : _this.totPrdStckNo
                        ,addPrc : 0
                        ,originalAddPrc : 0
                        ,stckQty : _this.totStockQty
                    }];
                    _this.addOrderOptArr(dataArr);
                }
            }
            return false;
        });

    };

    CustomOption.prototype.getNextOptList = function(paramData){
        var _this = this;
        paramData.searchType = "nextOpt";

        if("02" == _this.selOptTyp){
            _this.openNextOption(_this.entCnt === 0 ? _this.index+1 : _this.index+2);
        }else{
            _this.getNextOptionData(paramData);
        }

    };

    CustomOption.prototype.getIsLastOptSelected = function(){
        var _this = this;
        var isLast = false;
        if("01" == _this.selOptTyp){
            if (_this.selCnt == _this.selOptArr.length && _this.selCnt == _this.index +1){
                isLast = true;
            }
        }else if("02" == _this.selOptTyp){
            if (_this.setCnt == _this.selOptArr.length){
                isLast = true;
            }
        }
        return isLast;
    };

    CustomOption.prototype.getNextOptionData = function (paramData) {

        var _this = this;
        if("nextOpt" == paramData.searchType){

            var url = '/products/' + _this.prdNo
                ,optNoArr = paramData.optNo
                ,optLvl = paramData.selOptIdx + 1
                ,param = ""
                ,callBack;

            // _this.index = paramData.seloptidx - 1;

            //마지막 추가
            if (_this.selCnt == optLvl ) {

                url +=  '/last-options';
                param = "optNoArr=" + optNoArr
                    + "&selOptCnt=" + _this.selCnt
                    + "&xSiteCode=" + optVar.xSiteCode
                    + "&partnerPrdNos=" + prdVar.partnerPrdNos;

                callBack = function(returnVal){

                    if (returnVal == "FAIL") {
                        alert("서비스 장애가 있습니다. 고객센터로 연락 주세요.");
                        return;
                    }
                    var jsonObj = eval(returnVal);
                    jsonObj = _this.getTransOptionData(jsonObj, optLvl);
                    _this.index = optLvl-1;
                    var data = $.extend({"target": _this.index}, jsonObj);
                    _this.setTemplate(data);
                };

                //중간 추가
            }else{
                url +=  '/sub-options';
                param = "optNoArr=" + optNoArr
                    + "&optLvl=" + optLvl
                    + "&selOptCnt=" + _this.selCnt
                    + "&xSiteCode=" + optVar.xSiteCode
                    + "&partnerPrdNos=" + prdVar.partnerPrdNos;

                callBack = function(returnVal){

                    if (returnVal == "FAIL") {
                        alert("옵션을 불러오는 과정에서 일시적인 오류가 발생했습니다. 새로고침하신 후 이용해주세요.");
                        return;
                    }

                    var jsonObj = eval(returnVal);
                    jsonObj = _this.getTransOptionData(jsonObj, optLvl);
                    _this.index = optLvl-1;
                    var data = $.extend({"target": _this.index}, jsonObj);
                    _this.setTemplate(data);
                };
            }

            _this.paramData = paramData;

            $.ajax({
                url : url,
                data : param,
                success : callBack
            });

        }
    };

    CustomOption.prototype.extractData = function ($obj) {
        var dataList = [];

        $.each( $obj, function( key, value ) {
            dataList.push( $(value).data() );
        });

        if(dataList.length == 1) {
            return dataList[0];
        }else{
            return dataList;
        }
    };


    CustomOption.prototype.getTransOptionData = function(jsonObj, optLvl) {
        var _this = this;
        var size = jsonObj.infoList.length;
        for(var i=0;i<size;i++){
            jsonObj.infoList[i] = _this.getOptionLiData(jsonObj.infoList[i], optLvl);
        }
        return jsonObj;
    };

    CustomOption.prototype.getOptionLiData = function(obj, optLvl) {
        var _this = this;
        obj.optNo = _this.paramData.optNo + "," + obj.optNo;
        obj.selOptIdx = Number(optLvl);

        obj.dtlOptNm = obj.dtlOptNm.replace(/^@#@\[/g, "[");

        if((Number(obj.minAddPrc) == 0 && Number(obj.maxAddPrc) == 0) || Number(obj.minAddPrc) == Number(obj.maxAddPrc)) {
            obj.price = _this.commaFormat(Number(_this.dscPrc) + Number(obj.minAddPrc));
        } else if(obj.stckNo > 0){
            obj.price = _this.commaFormat(Number(_this.dscPrc) + Number(obj.minAddPrc));
        } else {
            obj.price = _this.commaFormat(Number(_this.dscPrc) + Number(obj.minAddPrc)) +" ~ " + _this.commaFormat(Number(_this.dscPrc) + Number(obj.maxAddPrc));
        }

        return obj;
    };

    CustomOption.prototype.setSelOptRecord = function($this){
        var _this = this
            ,optData = _this.extractData($this)
            ,selOptArrSize = _this.selOptArr.length;

        var selOptRecord = new SelOptRecord({
            "optNm" : optData.dtloptnm
            ,"optItemNo" : optData.optitemno
            ,"optValueNo" : optData.optvalueno
            ,"addPrc" : optData.addprc
            ,"stckQty" : optData.stckqty
            ,"selOptIdx" : optData.seloptidx
        });

        if(selOptArrSize > 0){
            var index = _this.chkArrIndexOf(selOptArrSize, selOptRecord.optItemNo);

            if(index > -1){
                _this.editSelOptArr(selOptRecord, index);
                _this.selOptArr.splice(index+1, 1);
            }else{
                _this.addSelOptArr(selOptRecord);
            }
        }else{
            _this.addSelOptArr(selOptRecord);
        }
    };

    CustomOption.prototype.addSelOptArr = function(selOptRecord){
        var _this = this;
        _this.selOptArr.push(selOptRecord);

        // 아이템 번호로 정렬
        _this.selOptArr.sort(function(i1, i2) {
            return i1.selOptIdx - i2.selOptIdx;
        });
    };

    CustomOption.prototype.editSelOptArr = function(selOptRecord, index){
        var _this = this;
        _this.selOptArr[index].optNm = selOptRecord.optNm;
        _this.selOptArr[index].optItemNo = selOptRecord.optItemNo;
        _this.selOptArr[index].optValueNo = selOptRecord.optValueNo;
        _this.selOptArr[index].addPrc = selOptRecord.addPrc;
        _this.selOptArr[index].stckQty = selOptRecord.stckQty;
    };


    CustomOption.prototype.chkArrIndexOf = function(size, optItemNo) {
        var _this = this;
        for ( var i = 0; i < size; i++) {
            if (_this.selOptArr[i].optItemNo == optItemNo) {
                return i;
            }
        }
        return -1;
    };

    CustomOption.prototype.getCurrentOptMixNo = function(separator) {
        var currentOptMixNo = "";
        if(this.selCnt > 0){
            for(var i = 0; i < this.selCnt; i++){
                currentOptMixNo = currentOptMixNo + this.selOptArr[i].optItemNo
                    + ":" + this.selOptArr[i].optValueNo + separator;
            }
            var lastIndex = currentOptMixNo.lastIndexOf(separator);
            currentOptMixNo = currentOptMixNo.substring(0, lastIndex);
        }else{
            currentOptMixNo = "nonSelOpt";
        }

        return currentOptMixNo;
    };

    CustomOption.prototype.getCurrentOptMixNm = function(separator, clsf) {
        var currentOptMixNm = "";
        if("ALL" == clsf || "ENT" == clsf){
            for(var i = 0; i < this.entCnt; i++){
                currentOptMixNm = currentOptMixNm + this.entOptArr[i].optTxt + separator;
            }
        }
        if("ALL" == clsf || "SEL" == clsf) {
            for (var i = 0; i < this.selCnt; i++) {
                currentOptMixNm = currentOptMixNm + this.selOptArr[i].optNm + separator;
            }
        }
        var lastIndex = currentOptMixNm.lastIndexOf(separator);
        currentOptMixNm = currentOptMixNm.substring(0, lastIndex);
        return currentOptMixNm;
    };

    CustomOption.prototype.chkOptStock = function() {
        var _this = this;
        var url = "/products/v1/pc/products/" + _this.prdNo + "/stock-option-nos";
        var mixOptNo = _this.getCurrentOptMixNo(_this.SPLIT_SEPARATOR);
        var mixOptNm = _this.getCurrentOptMixNm(_this.SPLIT_SEPARATOR, "SEL");
        var itemNames	= _this.itemNms;
        var strNo = prdVar.isEMart || prdVar.isLotteMart ? prdVar.storeNo : "";
        var param = "mixOptNo=" + mixOptNo + "&selOptCnt=" + _this.selCnt
            + "&selOptTyp=" + _this.selOptTyp
            + "&optNmList=" + _this.fixedEncodeURIComponent(itemNames)
            + "&mixOptNm=" + _this.fixedEncodeURIComponent(mixOptNm)
            + "&xSiteCode=" + optVar.xSiteCode
            + "&strNo=" + strNo
            + "&partnerPrdNos=" + prdVar.partnerPrdNos;

        optVar.optCheckStatus = "CHECK";

        var callback = function(returnVal){
            optVar.optCheckStatus = "OK";
            if (returnVal == "FAIL") {
                alert("옵션을 불러오는 과정에서 일시적인 오류가 발생했습니다. 새로고침하신 후 이용해주세요!");
                return;
            }
            var jsonObj = eval(returnVal);

            if( jsonObj == null || jsonObj[0] == null ) {
                alert("옵션정보가 변경되어 선택 불가합니다. 새로고침하신 후 이용해주세요!");
                return;
            }

            _this.addOrderOptArr(jsonObj);
        };

        $.ajax({
            url : url,
            data : param,
            method : 'POST',
            success : callback
        });
    };

    CustomOption.prototype.chkDuplicateStckNo = function(prdStckNo){
        var _this = this;
        for(var i=0,size=optVar.orderOptArr.length;i<size;i++){
            if(optVar.orderOptArr[i].prdStckNo == prdStckNo){
                if(_this.optCnt == 0 ) {
                    alert("이미 선택되어 있는 상품입니다.");
                }else {
                    alert("이미 선택되어 있는 옵션입니다.");
                }
                return true;
            }
        }
        return false;
    };

    CustomOption.prototype.addOrderOptArr = function(data) {
        var _this = this;
        if(_this.chkDuplicateStckNo(data[0].prdStckNo)){
            return false;
        }

        var orderOpt = {};
        orderOpt.selOptArr = _this.selOptArr;
        orderOpt.entOptArr = _this.entOptArr;
        orderOpt.optMixNo = _this.getCurrentOptMixNo(",");
        orderOpt.prdStckNo = data[0].prdStckNo;
        orderOpt.amount = _this.defaultOptionQty || 1;
        orderOpt.defaultOptionQty = _this.defaultOptionQty || 1;
        orderOpt.addPrc = data[0].addPrc;
        orderOpt.originalAddPrc = data[0].originalAddPrc || 0;
        orderOpt.price = Number(_this.dscPrc) + Number(data[0].addPrc);
        orderOpt.stckQty = data[0].stckQty;
        orderOpt.sumDscPrc = _this.discAmt;
        orderOpt.choiceCupnIssNo = 0;
        orderOpt.bonusCupnIssNo = 0;
        orderOpt.plusDscAmt = 0;
        orderOpt.rntlCst = data[0].rntlCst;
        orderOpt.rntlSavePoint =  Math.floor( data[0].rntlCst * prcVar.prdRltnSavingRate / 100 ) ;
        orderOpt.optPrdNo 	= _this.prdNo;
        orderOpt.optPrdNm 	= _this.prdNm;
        orderOpt.dscPrc		= _this.dscPrc;
        orderOpt.dlvIssCupnNo = 0;
        orderOpt.prdVisitDlvYn = 'N';
        orderOpt.prdDlvCstStlTyp = _this.prdDlvCstStlTyp;
        orderOpt.optCnt	= _this.optCnt;
        orderOpt.selCnt = _this.selCnt;
        orderOpt.entOptCnt = _this.entCnt;
        orderOpt.selPrc	= _this.selPrc;
        orderOpt.marketPrc = _this.commaFormat(_this.marketPrc);
        orderOpt.ordObjLimit	= _this.ordObjLimit;
        orderOpt.limitTypCd		= _this.limitTypCd;
        orderOpt.ordLimitRedirectURL	= _this.ordLimitRedirectURL;
        orderOpt.eventDomainYN			= _this.eventDomainYN;
        orderOpt.isSelLimit				= _this.isSelLimit;
        orderOpt.selLimitQty			= _this.selLimitQty;
        orderOpt.isSelMinLimit			= _this.isSelMinLimit;
        orderOpt.selMinLimitQty			= _this.selMinLimitQty;
        orderOpt.selLimitPrdBuyCnt	= _this.selLimitPrdBuyCnt;
        orderOpt.selLimitTypCd		= _this.selLimitTypCd;
        orderOpt.townSelLmtDy		= _this.townSelLmtDy;
        orderOpt.repurchaseDy		= _this.repurchaseDy;
        orderOpt.discAmt			= _this.discAmt;
        orderOpt.visitPrdYn			= _this.visitPrdYn;	//방문 가능 여부
        orderOpt.is11PayPopUpYn		= _this.is11PayPopUpYn;	//11Pay 희망일설치 팝업 여부
        orderOpt.soDscAmt = data[0].soDscAmt;
        orderOpt.moDscAmt = data[0].moDscAmt;
        orderOpt.memberMoDscAmt = data[0].memberMoDscAmt;

        try{	// 로그 관련 정보 세팅
            orderOpt.prdImgUrl		= _this.prdImgUrl;
            orderOpt.lctgrNo		= _this.lctgrNo;
            orderOpt.mctgrNo		= _this.mctgrNo;
            orderOpt.sctgrNo		= _this.sctgrNo;
            orderOpt.dispCtgrNo		= _this.dispCtgrNo;
            orderOpt.lctgrNm		= _this.lctgrNm;
            orderOpt.mctgrNm		= _this.mctgrNm;
            orderOpt.sctgrNm		= _this.sctgrNm;
            orderOpt.dsipCtgrNm		= _this.dsipCtgrNm;
            orderOpt.catalogNo		= _this.catalogNo;
            orderOpt.isSale			= _this.isSale;
            orderOpt.isAdultPrd		= _this.isAdultPrd;
            orderOpt.sellerNm		= _this.sellerNm;
            orderOpt.brandAddCtgrNo	= _this.brandAddCtgrNo;
            orderOpt.brandCd		= _this.brandCd;
            orderOpt.isNowDlv		= _this.isNowDlv;
        } catch (e) {}

        _this.pushOrderOptArr(orderOpt);

        _this.addOrderOptArea(orderOpt);
    };

    CustomOption.prototype.addOrderNoOptArr = function() {
        var _this = this;
        if(_this.chkDuplicateStckNo(_this.totPrdStckNo)){
            return false;
        }

        var orderOpt = {};
        orderOpt.selOptArr = _this.selOptArr;
        orderOpt.entOptArr = _this.entOptArr;
        orderOpt.optMixNo = "nonSelOpt";
        orderOpt.prdStckNo = _this.totPrdStckNo;
        orderOpt.amount = _this.defaultOptionQty || 1;
        orderOpt.defaultOptionQty = _this.defaultOptionQty || 1;
        orderOpt.addPrc = _this.totPrdPrc;
        orderOpt.originalAddPrc = 0;
        orderOpt.price = Number(_this.dscPrc) + Number(_this.totPrdPrc);
        orderOpt.stckQty = _this.totStockQty;
        orderOpt.sumDscPrc = _this.discAmt;
        orderOpt.choiceCupnIssNo = 0;
        orderOpt.bonusCupnIssNo = 0;
        orderOpt.plusDscAmt = 0;
        orderOpt.rntlCst = 0;
        orderOpt.optPrdNo 	= _this.prdNo;
        orderOpt.optPrdNm 	= _this.prdNm;
        orderOpt.dscPrc		= _this.dscPrc;
        orderOpt.dlvIssCupnNo = 0;
        orderOpt.prdVisitDlvYn = 'N';
        orderOpt.prdDlvCstStlTyp = _this.prdDlvCstStlTyp;
        orderOpt.optCnt	= _this.optCnt;
        orderOpt.selCnt = _this.selCnt;
        orderOpt.entOptCnt = _this.entCnt;
        orderOpt.selPrc	= _this.selPrc;
        orderOpt.ordObjLimit	= _this.ordObjLimit;
        orderOpt.limitTypCd		= _this.limitTypCd;
        orderOpt.ordLimitRedirectURL	= _this.ordLimitRedirectURL;
        orderOpt.eventDomainYN			= _this.eventDomainYN;
        orderOpt.isSelLimit				= _this.isSelLimit;
        orderOpt.selLimitQty			= _this.selLimitQty;
        orderOpt.isSelMinLimit			= _this.isSelMinLimit;
        orderOpt.selMinLimitQty			= _this.selMinLimitQty;
        orderOpt.selLimitPrdBuyCnt	= _this.selLimitPrdBuyCnt;
        orderOpt.selLimitTypCd		= _this.selLimitTypCd;
        orderOpt.townSelLmtDy		= _this.townSelLmtDy;
        orderOpt.repurchaseDy		= _this.repurchaseDy;
        orderOpt.discAmt			= _this.discAmt;
        orderOpt.visitPrdYn			= _this.visitPrdYn;	//방문 가능 여부
        orderOpt.is11PayPopUpYn		= _this.is11PayPopUpYn;	//11페이 희망 배송일 팝업 여부
        orderOpt.soDscAmt = _this.soDscAmt;
        orderOpt.moDscAmt = _this.moDscAmt;
        orderOpt.memberMoDscAmt = _this.memberMoDscAmt;

        try{	// 로그 관련 정보 세팅
            orderOpt.prdImgUrl		= _this.prdImgUrl;
            orderOpt.lctgrNo		= _this.lctgrNo;
            orderOpt.mctgrNo		= _this.mctgrNo;
            orderOpt.sctgrNo		= _this.sctgrNo;
            orderOpt.dispCtgrNo		= _this.dispCtgrNo;
            orderOpt.lctgrNm		= _this.lctgrNm;
            orderOpt.mctgrNm		= _this.mctgrNm;
            orderOpt.sctgrNm		= _this.sctgrNm;
            orderOpt.dsipCtgrNm		= _this.dsipCtgrNm;
            orderOpt.catalogNo		= _this.catalogNo;
            orderOpt.isSale			= _this.isSale;
            orderOpt.isAdultPrd		= _this.isAdultPrd;
            orderOpt.sellerNm		= _this.sellerNm;
            orderOpt.brandAddCtgrNo	= _this.brandAddCtgrNo;
            orderOpt.brandCd		= _this.brandCd;
            orderOpt.isNowDlv		= _this.isNowDlv;
        } catch (e) {}

        _this.pushOrderOptArr(orderOpt);

        _this.addOrderOptArea(orderOpt);

    };

    CustomOption.prototype.addOrderOptArea = function(data) {
        var _this = this;
        var selOptData = $.extend({}, {"target": "ui_optSelWrapper"}, _this.getTransSetItemData(data));

        // 상품 추가는 product.setItem.js 모듈에서 관리한다. -> 추후 다른 부분에서도 상품 선택시 사용 가능하다.
        _this.$win.trigger('setItem', selOptData);
        $(".option_choice_wrap").removeClass('active');	// 최상단 탭 닫기
        $(".accordion_section").removeClass('active');		// 하위 탭 닫기
        //선택한 옵션 추가후 기본적인 작업을 진행
        _this.clearOpt('all');
        $("#ui_stdPrdOption2").html('');
        $('#ui_stdPrd2').find('.selected').html('상품 선택');

        $("[name=selOptMergeNm]").each(function(){
            $(this).text("");
        });
        _this.selOptArr = [];
        _this.entOptArr = [];
        //_this.viewOptionNew(false, true);
    };

    CustomOption.prototype.getTransSetItemData = function(data){
        var _this = this;
        var optMixNm	= _this.getCurrentOptMixNm(" / ", "ALL");
        data.idxMixNo = data.optMixNo;
        if(optMixNm != "" && optMixNm.length > 0) {
            data.dispNm = _this.prdIndexStr + '. ' +_this.prdNm+' / '+optMixNm;
        } else {
            data.dispNm = _this.prdIndexStr + '. ' +_this.prdNm;
        }
        data.priceTxt = _this.commaFormat(data.price);
        data.saveRntlPointStr = "";

        return data;
    };
    CustomOption.prototype.clearOpt = function(target, $obj) {
        var _this = this;

        if(target == 'all') {
            $('.bot_option_section').each(function() {
                var _titleTarget = $(this);
                _titleTarget.find('.accordion_item').html(_titleTarget.find('input').val());
                _titleTarget.removeClass('selected');
                _titleTarget.removeClass('active');
            });
            $('.option_choice_wrap').each(function(){
                $(this).removeClass('active');
            });
            //데이터 초기화
            if(_this.selOptTyp == '01' && _this.selCnt > 0) {
                for(var i=1; i<_this.selCnt; i++) {
                    $('#ui_stdPrdOption2').find('.option_item_list').eq(i).html('')
                }
            }
        }
    };

    CustomOption.prototype.pushOrderOptArr = function(data){

        optVar.orderOptArr.push(data);
    };

    CustomOption.prototype.setEntOptRecord = function ($obj) {
        var entOptRecord = new EntOptRecord({
            "optNo" : $obj.data("optentno"),
            "optNm" : $obj.data("optentnm"),
            "optTxt" : $obj.val()
        });

        this.entOptArr.push(entOptRecord);
    };

    CustomOption.prototype.chkDuplicateSelOption = function(optMixNo){
        for(var i=0,size=optVar.orderOptArr.length;i<size;i++){
            if(optVar.orderOptArr[i].optMixNo == optMixNo && optVar.orderOptArr[i].optPrdNo == this.prdNo){
                alert("이미 선택되어 있는 옵션입니다.");
                return true;
            }
        }
        return false;
    };

    CustomOption.prototype.commaFormat = function (num) {
        if (num === 0) {
            return 0;
        }
        var reg = /(^[+-]?\d+)(\d{3})/,
            n = (num + '');

        while (reg.test(n)) {
            n = n.replace(reg, '$1' + ',' + '$2');
        }
        return n;
    };

    CustomOption.prototype.fixedEncodeURIComponent = function (str) {
        return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
            return '%' + c.charCodeAt(0).toString(16);
        });
    };

    return CustomOption;
}));
